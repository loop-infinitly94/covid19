{"version":3,"sources":["lib.js","table.js","worlddetails.js","countryhistory.js","countrydetailsnormal.js","search.js","rsssection.js","handleurl.js","datasection.js","header.js","footer.js","App.js","serviceWorker.js","index.js"],"names":["numberWithCommas","x","toString","replace","formatDateT","date","today","dd","getDate","mm","getMonth","getFullYear","descendingComparator","a","b","orderBy","EnhancedTableHead","props","classes","order","onSelectAllClick","onRequestSort","numSelected","rowCount","TableHead","TableRow","className","columns","map","headCell","TableCell","key","id","align","numeric","padding","disablePadding","sortDirection","TableSortLabel","active","direction","onClick","property","event","label","visuallyHidden","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","useStyles","width","paper","marginBottom","border","clip","height","margin","overflow","position","top","EnhancedTable","React","useState","setOrder","defaultSort","setOrderBy","selected","setSelected","page","setPage","dense","setDense","pagination","rowsPerPage","setRowsPerPage","emptyRows","Math","min","rows","length","Paper","TableContainer","Table","table","aria-labelledby","size","aria-label","target","checked","newSelecteds","n","name","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","country","indexOf","hover","undefined","getCurrentSelectedRow","handleClick","role","aria-checked","tabIndex","column","value","newCases","newDeaths","format","to","lib","split","style","colSpan","TablePagination","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","FormControlLabel","control","Switch","onChange","minWidth","bullet","display","transform","fontSize","pos","WorldDetils","details","Card","CardContent","Typography","variant","cases","total","deaths","recovered","gutterBottom","new","CountryHistory","state","tableRow","summaryData","isLoading","tableOrigRow","this","currentCountry","toLowerCase","currentDate","selectedDate","setState","axios","get","then","response","status","data","setDataForTable","prevState","prevProps","tempArray","eachCountry","push","createData","eachData","worldSummary","totalCases","activeCases","criticalCases","critical","totalDeaths","time","spinner","bind","Component","CountryNormal","Date","setSelectedDate","Object","keys","currentRow","dateFormat","maxDate","option","marginRight","CountrySelect","countries","list","tempObj","getCountries","countrySlug","Autocomplete","options","onChangeSearch","autoHighlight","getOptionLabel","renderOption","Fragment","renderInput","params","TextField","inputProps","autoComplete","xmlToJson","xml","obj","nodeType","attributes","j","attribute","item","nodeName","nodeValue","hasChildNodes","i","childNodes","old","RssSection","rssFeedWHO","parser","DOMParser","parseFromString","xmlDoc","JsonData","setInterval","rss","channel","href","link","html","tmp","document","createElement","innerHTML","textContent","innerText","description","pubDate","HandleError","src","PureComponent","DataSection","isLoadingCountry","countryData","countryTableRow","tableSelection","searchValue","Today","temp","setDate","Yesterday","refreshData","console","log","localStorage","setItem","JSON","stringify","getElementById","scrollIntoView","filterTable","eachRow","currentPath","getItem","parse","window","location","pathname","exact","path","render","HandleUrl","withRouter","header","App","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5fb6ed81.chunk.js","sourcesContent":["export const numberWithCommas = (x) => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport const formatDateT = (date) => {\r\n    var today = date;\r\n    var dd = today.getDate();\r\n\r\n    var mm = today.getMonth()+1; \r\n    var yyyy = today.getFullYear();\r\n    if(dd<10) \r\n    {\r\n        dd='0'+dd;\r\n    } \r\n\r\n    if(mm<10) \r\n    {\r\n        mm='0'+mm;\r\n    } \r\n    return yyyy + '-' + mm + '-' + dd;\r\n}\r\n\r\nexport const getTime = (value) => {\r\n    var time = value.split('T')\r\n    // console.log(time)\r\n    return time[1]\r\n}\r\n\r\nexport const getDate = (value) => {\r\n    var time = value.split('T')\r\n    // console.log(time)\r\n    return time[0]\r\n}\r\n\r\nexport const stripHtml = (html) =>{\r\n   var tmp = document.createElement(\"DIV\");\r\n   tmp.innerHTML = html;\r\n   return tmp.textContent || tmp.innerText || \"\";\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n// import DeleteIcon from '@material-ui/icons/Delete';\r\n// import FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nimport * as lib from './lib'\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow className = \"tableRow\">\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell> */}\r\n        {props.columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            className = \"tableCell\"\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\n// const EnhancedTableToolbar = (props) => {\r\n//   const classes = useToolbarStyles();\r\n//   const { numSelected } = props;\r\n\r\n//   return (\r\n//     <Toolbar\r\n//       className={clsx(classes.root, {\r\n//         [classes.highlight]: numSelected > 0,\r\n//       })}\r\n//     >\r\n//       {numSelected > 0 ? (\r\n//         <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n//           {numSelected} selected\r\n//         </Typography>\r\n//       ) : (\r\n//         <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n//           Nutrition\r\n//         </Typography>\r\n//       )}\r\n\r\n//       {numSelected > 0 ? (\r\n//         <Tooltip title=\"Delete\">\r\n//           <IconButton aria-label=\"delete\">\r\n//             <DeleteIcon />\r\n//           </IconButton>\r\n//         </Tooltip>\r\n//       ) : (\r\n//         <Tooltip title=\"Filter list\">\r\n//           <IconButton aria-label=\"filter list\">\r\n//             <FilterListIcon />\r\n//           </IconButton>\r\n//         </Tooltip>\r\n//       )}\r\n//     </Toolbar>\r\n//   );\r\n// };\r\n\r\n// EnhancedTableToolbar.propTypes = {\r\n//   numSelected: PropTypes.number.isRequired,\r\n// };\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n    // console.log(props)\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('desc');\r\n  const [orderBy, setOrderBy] = React.useState(props.defaultSort);\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.pagination);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = props.rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, row) => {\r\n    // setSelected([]);\r\n    \r\n    const selectedIndex = selected.indexOf(row.country);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = [row.country];\r\n    } \r\n    if(props.getCurrentSelectedRow !== undefined){\r\n      props.getCurrentSelectedRow(row, setSelected)\r\n    }\r\n    \r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.length > 0 ? selected[selected.length-1].indexOf(name) !== -1 : false;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.rows.length - page * rowsPerPage);\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={props.rows.length}\r\n              columns = {props.columns}\r\n            />\r\n            <TableBody>\r\n              {stableSort(props.rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.country);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={index}\r\n                      selected={isItemSelected}\r\n                      className = \"tableRow\"\r\n                    >\r\n                      {/* <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}> */}\r\n                  {props.columns.map((column) => {\r\n                    // console.log(column, 'test')\r\n                    \r\n                    const value = row[column.id];\r\n                    var newCases = column.id === 'newCases' && value !== ''? ' newCasesTableCell' : '';\r\n                    var newDeaths = column.id === 'newDeaths' && value !== '' ? ' newDeathsTableCell' : '';\r\n                    if(column.id === 'country' ){\r\n                      return (\r\n                        <TableCell className = {\"tableCell\" + newCases + newDeaths} key={column.id} align={column.align}>\r\n                          {column.format && typeof value === 'number' ? column.format((value)) : <Link to = {'/' + value}>{value}</Link> }\r\n                        </TableCell>\r\n                      );\r\n                    }\r\n                    else{\r\n                      return (\r\n                        <TableCell className = {\"tableCell\" + newCases + newDeaths} key={column.id} align={column.align}>\r\n                          {column.format && typeof value === 'number' ? column.format((value)) : value !== null && column.id !== \"time\" ? lib.numberWithCommas(value): column.id === \"time\" ? lib.getTime(value) : value}\r\n                        </TableCell>\r\n                      );\r\n                    }\r\n                  })}\r\n                {/* </TableRow> */}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={props.rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport * as lib from './lib'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function WorldDetils(props) {\r\n    var details = props.details;\r\n// console.log(detials)\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <div id = \"SummaryContianer\" className = \"SummaryContianer\">\r\n        <div className = \"Summary\">\r\n          <Card className={'SummaryContianer1' + ' ' +classes.root}>\r\n          <CardContent className = \"Cases commonCard\">\r\n            <Typography className={classes.pos}>\r\n                  Total Cases\r\n              </Typography>\r\n              <Typography className={\"Total\"} variant=\"h5\" component=\"h2\">\r\n              {lib.numberWithCommas(details.cases.total)}\r\n              </Typography>\r\n              \r\n          </CardContent>\r\n          <CardContent className = \"Death commonCard\">\r\n            <Typography className={classes.pos}>\r\n              Total Deaths\r\n              </Typography>\r\n              <Typography className={\"Deaths\"} variant=\"h5\" component=\"h2\">\r\n              {lib.numberWithCommas(details.deaths.total)}\r\n              </Typography>\r\n              \r\n          </CardContent>\r\n          <CardContent className = \"Recovery commonCard\">\r\n          <Typography className={classes.pos}>\r\n            Total Recovered\r\n            </Typography>\r\n            <Typography className={\"Recovered\"} variant=\"h5\" component=\"h2\">\r\n                {lib.numberWithCommas(details.cases.recovered)}\r\n            </Typography>\r\n              \r\n          </CardContent>\r\n          \r\n          </Card>\r\n            \r\n            \r\n            \r\n        </div>\r\n        <div className = \"summary2\">\r\n          <Card className={'SummaryContianer1' + ' ' +classes.root}>\r\n          <CardContent className = \"Cases commonCard\">\r\n              <Typography className={classes.title} gutterBottom>\r\n              Newly Confirmed\r\n              </Typography>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n              {details.cases.new}\r\n              </Typography>\r\n              \r\n          </CardContent>\r\n          <CardContent className = \"Death commonCard\">\r\n              <Typography className={classes.pos}>\r\n              New Deaths\r\n              </Typography>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n              {details.deaths.new}\r\n              </Typography>\r\n              \r\n          </CardContent>\r\n          {/* <CardContent className = \"Recovery commonCard\">\r\n              <Typography className={classes.pos} color=\"textSecondary\">\r\n              NewRecovered\r\n              </Typography>\r\n              <Typography variant=\"h5\" component=\"h2\">\r\n                  {details.cases.recovered}\r\n              </Typography>\r\n              \r\n          </CardContent> */}\r\n          \r\n          </Card>\r\n        </div>\r\n        \r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Table from './table';\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport * as lib from './lib'\r\n\r\nconst columns = [\r\n    { id: 'time', label: 'Time', minWidth: 30 },\r\n    { id: 'totalCases', label: 'Total Cases', minWidth: 30 },\r\n    { id: 'newCases', label: 'New Cases', minWidth: 30 },\r\n    { id: 'activeCases', label: 'Active Cases', minWidth: 30 },\r\n    { id: 'criticalCases', label: 'Critical Cases', minWidth: 30 },\r\n    { id: 'recovered', label: 'Recovered Cases', minWidth: 30 },\r\n    { id: 'newDeaths', label: 'New Deaths', minWidth: 30 },\r\n    { id: 'totalDeaths', label: 'Total Deaths', minWidth: 30 },\r\n];\r\n\r\nclass CountryHistory extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            tableRow: [],\r\n            summaryData: {},\r\n            isLoading: true,\r\n            tableOrigRow: [],\r\n            country:'',\r\n            isLoading:false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        // console.log(this.props)\r\n        // var country = this.props.currentCountry.toLowerCase();\r\n        var country = this.props.currentCountry.toLowerCase();\r\n        var currentDate = lib.formatDateT(this.props.selectedDate)\r\n        this.setState({country: this.props.currentCountry.toLowerCase(),\r\n            date: currentDate\r\n        })\r\n\r\n        this.setState({isLoading: true})\r\n        axios.get(\"https://covid-193.p.rapidapi.com/history?day=\"+currentDate+\"&country=\"+country, {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"d57969ed8amsh05ce00a7d1d6949p1fc6d8jsn2cff508d63aa\"\r\n            }\r\n        }).then((response)=>{\r\n\r\n            if(response.status === 200){\r\n                this.setState({summaryData: response.data.response})\r\n                this.setDataForTable();\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevState, prevProps){\r\n        // console.log(prevState, prevProps, this.state)\r\n\r\n        if(this.state.country !== this.props.currentCountry.toLowerCase()){\r\n        // console.log(prevProps, 'prePRops', this.state, 'state', this.props, 'propsthis')\r\n            this.setState({country: this.props.currentCountry.toLowerCase()})\r\n            var country = this.props.currentCountry.toLowerCase();\r\n            var currentDate = lib.formatDateT(this.state.date)\r\n            \r\n            this.setState({country: this.props.currentCountry.toLowerCase()})\r\n            this.setState({isLoading: true})\r\n\r\n            axios.get(\"https://covid-193.p.rapidapi.com/history?day=\"+currentDate+\"&country=\"+country, {\r\n                \"method\": \"GET\",\r\n                \"headers\": {\r\n                    \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                    \"x-rapidapi-key\": \"d57969ed8amsh05ce00a7d1d6949p1fc6d8jsn2cff508d63aa\"\r\n                }\r\n            }).then((response)=>{\r\n    \r\n                if(response.status === 200){\r\n                    this.setState({summaryData: response.data.response})\r\n                    this.setDataForTable();\r\n                }\r\n            })\r\n        }\r\n        if(this.state.date !== this.props.selectedDate){\r\n            // console.log(this.props.selectedDate)\r\n                // var country = this.props.currentCountry.toLowerCase();\r\n            var currentDate = lib.formatDateT(this.props.selectedDate)\r\n            \r\n            // this.setState({country: this.props.currentCountry.toLowerCase()})\r\n            this.setState({date: this.props.selectedDate})\r\n            this.setState({isLoading: true})\r\n\r\n            axios.get(\"https://covid-193.p.rapidapi.com/history?day=\"+currentDate+\"&country=\"+this.state.country, {\r\n                \"method\": \"GET\",\r\n                \"headers\": {\r\n                    \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                    \"x-rapidapi-key\": \"d57969ed8amsh05ce00a7d1d6949p1fc6d8jsn2cff508d63aa\"\r\n                }\r\n            }).then((response)=>{\r\n    \r\n                if(response.status === 200){\r\n                    this.setState({summaryData: response.data.response})\r\n                    this.setDataForTable();\r\n                }\r\n            })\r\n            }\r\n    }\r\n\r\n    setDataForTable(){\r\n        var tempArray = [];\r\n        this.state.summaryData.map((eachCountry) => {\r\n            // var largest = eachCountry;\r\n            tempArray.push(this.createData(eachCountry))\r\n        })\r\n        // tempArray.sort(this.compare);\r\n        this.setState({tableRow: tempArray})\r\n        this.setState({tableOrigRow: tempArray})\r\n        this.setState({isLoading: false})\r\n    }\r\n\r\n    createData(eachData) {\r\n        // var tempObj = {};\r\n        // console.log(eachData.cases.active)\r\n        // for (const key in eachData) {\r\n        //     if (eachData.hasOwnProperty(key)) {\r\n        //         const element = eachData[key];\r\n        //         tempObj[key] = element\r\n        //     }\r\n        // }\r\n        // var Country = eachData.country, NewConfirmed = eachData.NewConfirmed, TotalCases =  eachData.cases.total, NewDeaths = eachData.NewDeaths, TotalDeaths = eachData.TotalDeaths, NewRecovered = eachData.NewRecovered, TotalRecovered = eachData.TotalRecovered, slug = eachData.Slug;\r\n        if(eachData.country === \"All\"){\r\n            this.setState({worldSummary: eachData})\r\n        }\r\n        var country = eachData.country;\r\n        var totalCases = eachData.cases.total;\r\n        var newCases = eachData.cases.new;\r\n        var activeCases = eachData.cases.active;\r\n        var criticalCases = eachData.cases.critical;\r\n        var recovered = eachData.cases.recovered;\r\n        var newDeaths = eachData.deaths.new === null ? '' : eachData.deaths.new;\r\n        var totalDeaths = eachData.deaths.total;\r\n        var time = eachData.time;\r\n\r\n        return {\r\n            country,\r\n            totalCases,\r\n            newCases,\r\n            activeCases,\r\n            criticalCases,\r\n            recovered,\r\n            newDeaths,\r\n            totalDeaths,\r\n            time\r\n        };\r\n    }\r\n\r\n    getCurrentSelectedRow(row, setSelected){\r\n        \r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <LoadingOverlay\r\n            active={this.state.isLoading}\r\n            spinner\r\n            text='Loading your content...'\r\n            >\r\n            <div>\r\n               {!this.state.isLoading ?  <Table rows = {this.state.tableRow} columns = {columns} getCurrentSelectedRow = {this.getCurrentSelectedRow.bind(this)} defaultSort = {\"totalCases\"} pagination = {5}/> : null}\r\n            </div>\r\n            </LoadingOverlay>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CountryHistory;","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\n \r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport * as lib from './lib';\r\nimport CountryHistory from './countryhistory';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 275,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  });\r\n\r\nexport default function CountryNormal(props) {\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n    const classes = useStyles();\r\n    const bull = <span className={classes.bullet}>•</span>;\r\n    // console.log(props);\r\n    \r\n    if(Object.keys(props.currentRow).length > 0){\r\n    return (\r\n        <div>\r\n         <div className = \"SummaryContianer\">\r\n           <Card className={'SummaryContianer1' + ' ' +classes.root}>\r\n            <CardContent className = \"Cases commonCard\">\r\n              \r\n                <Typography className={\"Total\"} variant=\"h5\" component=\"h2\">\r\n                {props.currentRow.country}\r\n                </Typography>\r\n                \r\n            </CardContent>\r\n            </Card>\r\n          <div className = \"Summary\">\r\n            <Card className={'SummaryContianer1' + ' ' +classes.root}>\r\n            <CardContent className = \"Cases commonCard\">\r\n              <Typography className={classes.pos}>\r\n                    Total Cases\r\n                </Typography>\r\n                <Typography className={\"Total\"} variant=\"h5\" component=\"h2\">\r\n                {lib.numberWithCommas(props.currentRow.totalCases)}\r\n                </Typography>\r\n                \r\n            </CardContent>\r\n            <CardContent className = \"Death commonCard\">\r\n              <Typography className={classes.pos}>\r\n                Total Deaths\r\n                </Typography>\r\n                <Typography className={\"Deaths\"} variant=\"h5\" component=\"h2\">\r\n                {lib.numberWithCommas(props.currentRow.totalDeaths)}\r\n                </Typography>\r\n                \r\n            </CardContent>\r\n            <CardContent className = \"Recovery commonCard\">\r\n            <Typography className={classes.pos}>\r\n              Total Recovered\r\n              </Typography>\r\n              <Typography className={\"Recovered\"} variant=\"h5\" component=\"h2\">\r\n                  {lib.numberWithCommas(props.currentRow.recovered)}\r\n              </Typography>\r\n                \r\n            </CardContent>\r\n            \r\n            </Card>\r\n              \r\n              \r\n              \r\n          </div>\r\n          <div className = \"summary2\">\r\n            <Card className={'SummaryContianer1' + ' ' +classes.root}>\r\n            <CardContent className = \"Cases commonCard\">\r\n                <Typography className={classes.title}  gutterBottom>\r\n                Newly Confirmed\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                {props.currentRow.newCases}\r\n                </Typography>\r\n                \r\n            </CardContent>\r\n            <CardContent className = \"Death commonCard\">\r\n                <Typography className={classes.pos} >\r\n                New Deaths\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                {props.currentRow.newDeaths}\r\n                </Typography>\r\n                \r\n            </CardContent>\r\n            {/* <CardContent className = \"Recovery commonCard\">\r\n                <Typography className={classes.pos} color=\"textSecondary\">\r\n                NewRecovered\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                    {details.cases.recovered}\r\n                </Typography>\r\n                \r\n            </CardContent> */}\r\n            \r\n            </Card>\r\n          </div>\r\n          </div>\r\n          <div className = \"countrySummary\">\r\n              <div className = \"datePicker\">\r\n                <span> Show Summary of Date - </span>\r\n              <DatePicker\r\n                selected={selectedDate}\r\n                onChange={handleDateChange}\r\n                dateFormat = {\"yyyy-MM-dd\"}\r\n                maxDate = {new Date()}\r\n              />\r\n              </div>\r\n              <div className=\"summaryDate\">\r\n              <p>Per Day Update {props.currentRow.country} - {lib.formatDateT(selectedDate)}</p>\r\n              </div>\r\n              <CountryHistory currentCountry = {props.currentRow.country} selectedDate = {selectedDate}/>\r\n            </div>\r\n      </div>\r\n  );\r\n}\r\n  else{\r\n      return null\r\n  }\r\n}\r\n","/* eslint-disable no-use-before-define */\r\nimport React, {useState} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// ISO 3166-1 alpha-2\r\n// ⚠️ No support for IE 11\r\nfunction countryToFlag(isoCode) {\r\n  return typeof String.fromCodePoint !== 'undefined'\r\n    ? isoCode\r\n        .toUpperCase()\r\n        .replace(/./g, (char) => String.fromCodePoint(char.charCodeAt(0) + 127397))\r\n    : isoCode;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  option: {\r\n    fontSize: 15,\r\n    '& > span': {\r\n      marginRight: 10,\r\n      fontSize: 18,\r\n    },\r\n  },\r\n});\r\n\r\nconst getCountries = (list) => {\r\n    var tempObj = [];\r\n    list.map((eachCountry) => {\r\n        tempObj.push({'label': eachCountry})\r\n    })\r\n    return tempObj;\r\n}\r\n\r\nexport default function CountrySelect(props) {\r\n  const classes = useStyles();\r\n    // const [value, onValueChange] = useState(\"\")\r\n    const countries = getCountries(props.countrySlug)\r\n  return (\r\n    <Autocomplete\r\n      id=\"country-select-demo\"\r\n      style={{ width: 300 }}\r\n      options={countries}\r\n      classes={{\r\n        option: classes.option,\r\n      }}\r\n      onChange={(event, value) => {\r\n        // onValueChange(value)\r\n        props.onChangeSearch(value)\r\n      }}\r\n    //   value={value}\r\n      autoHighlight\r\n      getOptionLabel={(option) => option.label}\r\n      renderOption={(option) => (\r\n        <React.Fragment>\r\n          {/* <span>{countryToFlag(option.code)}</span> */}\r\n          {option.label}\r\n        </React.Fragment>\r\n      )}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Choose a country\"\r\n          variant=\"outlined\"\r\n          \r\n          inputProps={{\r\n            ...params.inputProps,\r\n            autoComplete: 'new-password', // disable autocomplete and autofill\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\n// From https://bitbucket.org/atlassian/atlaskit-mk-2/raw/4ad0e56649c3e6c973e226b7efaeb28cb240ccb0/packages/core/select/src/data/countries.js\r\n\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport * as lib from './lib'\r\n\r\n// Changes XML to JSON\r\nfunction xmlToJson(xml) {\r\n\t\r\n\t// Create the return object\r\n\tvar obj = {};\r\n\r\n\tif (xml.nodeType == 1) { // element\r\n\t\t// do attributes\r\n\t\tif (xml.attributes.length > 0) {\r\n\t\tobj[\"@attributes\"] = {};\r\n\t\t\tfor (var j = 0; j < xml.attributes.length; j++) {\r\n\t\t\t\tvar attribute = xml.attributes.item(j);\r\n\t\t\t\tobj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\r\n\t\t\t}\r\n\t\t}\r\n\t} else if (xml.nodeType == 3) { // text\r\n\t\tobj = xml.nodeValue;\r\n\t}\r\n\r\n\t// do children\r\n\tif (xml.hasChildNodes()) {\r\n\t\tfor(var i = 0; i < xml.childNodes.length; i++) {\r\n\t\t\tvar item = xml.childNodes.item(i);\r\n\t\t\tvar nodeName = item.nodeName;\r\n\t\t\tif (typeof(obj[nodeName]) == \"undefined\") {\r\n\t\t\t\tobj[nodeName] = xmlToJson(item);\r\n\t\t\t} else {\r\n\t\t\t\tif (typeof(obj[nodeName].push) == \"undefined\") {\r\n\t\t\t\t\tvar old = obj[nodeName];\r\n\t\t\t\t\tobj[nodeName] = [];\r\n\t\t\t\t\tobj[nodeName].push(old);\r\n\t\t\t\t}\r\n\t\t\t\tobj[nodeName].push(xmlToJson(item));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn obj;\r\n};\r\n\r\nclass RssSection extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            rssFeedWHO: ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        axios.get(\"https://www.who.int/rss-feeds/news-english.xml\").then(async (response) => {\r\n            var parser = new DOMParser();\r\n            var xmlDoc = await parser.parseFromString(response.data,\"text/xml\");\r\n            // console.log(xmlToJson)\r\n            var JsonData = xmlToJson(xmlDoc)\r\n            if(response.status === 200){\r\n                this.setState({rssFeedWHO: JsonData})\r\n            }\r\n        })\r\n    }\r\n\r\n    refreshData(){\r\n        var self = this;\r\n        setInterval(() => {\r\n            // self.setState({isLoading: true})\r\n            axios.get(\"https://www.who.int/rss-feeds/news-english.xml\").then(async (response) => {\r\n                var parser = new DOMParser();\r\n                var xmlDoc = await parser.parseFromString(response.data,\"text/xml\");\r\n                // console.log(xmlToJson)\r\n                var JsonData = xmlToJson(xmlDoc)\r\n                if(response.status === 200){\r\n                    this.setState({rssFeedWHO: JsonData})\r\n                }\r\n            })\r\n        }, 10 * 60 * 1000);\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.rssFeedWHO)\r\n        if(Object.keys(this.state.rssFeedWHO).length > 0) {\r\n            return (\r\n                <div className =\"blogsection\">\r\n                    <div className = \"blogpost\" >\r\n                    <span className = \"myfeed\">NEWS FEED</span>\r\n                        {this.state.rssFeedWHO.rss.channel.item.map((rss, index) => {\r\n\r\n                            return (\r\n                                <div key = {index} className = \"eacharticle\">\r\n                                    {/* <img src = \"./images/love.jpg\" className = \"blogimage\"/> */}\r\n                                    <span className = \"blogtype\">Health</span>\r\n                                    <span className = \"blogheading\"><a href = {rss.link['#text']} target=\"_blank\">{rss.title['#text']}</a></span>\r\n                                    <span className = \"blogdescription\">{lib.stripHtml(rss.description['#text'])}</span>\r\n                                    <span className = \"blogdetails\">\r\n                                        <span className = \"blogbyanddate\">POSTED BY: {rss['a10:author']['a10:name']['#text'] === \" \" ? <a href = {this.state.rssFeedWHO.rss.channel.link['#text']} target=\"_blank\">WHO</a> : rss['a10:author']['a10:name']['#text']}</span>\r\n                                        <span className = \"blogcomments\">Date: {rss.pubDate['#text']}</span>\r\n                                    </span>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                        \r\n                        \r\n                    </div>\r\n                </div>\r\n                \r\n            );\r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default RssSection;","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass HandleError extends PureComponent {\r\n    render() {\r\n        return (\r\n            <div className = \"hiddenurl\">\r\n                <img src={\"./404.jpg\"} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HandleError;","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport LoadingOverlay from 'react-loading-overlay';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport Table from './table';\r\nimport WorldDetails from './worlddetails';\r\nimport CountryDetails from './dialog';\r\nimport CountryNormal from './countrydetailsnormal'\r\nimport CountrySelect from './search';\r\nimport { useLocation } from 'react-router-dom'\r\nimport RssSection from './rsssection';\r\nimport HandleUrl from './handleurl'\r\n\r\n\r\nconst columns = [\r\n    { id: 'country', label: 'Country', minWidth: 170 },\r\n    { id: 'totalCases', label: 'Total Cases', minWidth: 30 },\r\n    { id: 'newCases', label: 'New Cases', minWidth: 30 },\r\n    { id: 'activeCases', label: 'Active Cases', minWidth: 30 },\r\n    { id: 'criticalCases', label: 'Critical Cases', minWidth: 30 },\r\n    { id: 'recovered', label: 'Recovered Cases', minWidth: 30 },\r\n    { id: 'newDeaths', label: 'New Deaths', minWidth: 30 },\r\n    { id: 'totalDeaths', label: 'Total Deaths', minWidth: 30 }\r\n    \r\n];\r\n\r\n\r\n\r\n\r\n\r\nvar requestOptions = {\r\n    method: 'GET',\r\n    redirect: 'follow'\r\n};\r\n\r\nclass DataSection extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            isLoading: true,\r\n            isLoadingCountry: true,\r\n            summaryData: [],\r\n            tableRow: [],\r\n            countryData: [],\r\n            countryTableRow: [],\r\n            tableSelection: '',\r\n            currentRow:{},\r\n            searchValue: '',\r\n            worldSummary: {},\r\n            countrySlug:[]\r\n        }\r\n        this.Today = new Date();\r\n        var temp  = new Date();\r\n        temp.setDate(temp.getDate() - 1);\r\n        this.Yesterday = (temp);\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n        this.setState({isLoading: true})\r\n        \r\n        var requestOptions = {\r\n            method: 'GET',\r\n            redirect: 'follow'\r\n          };\r\n\r\n        // axios.get(\"https://covid-19-statistics.p.rapidapi.com/provinces?iso=CHN\", {\r\n        //     \"method\": \"GET\",\r\n        //     \"headers\": {\r\n        //         \"x-rapidapi-host\": \"covid-19-statistics.p.rapidapi.com\",\r\n        //         \"x-rapidapi-key\": \"d57969ed8amsh05ce00a7d1d6949p1fc6d8jsn2cff508d63aa\"\r\n        //     }\r\n        // }).then(response => {\r\n        //     console.log(response)\r\n        // })\r\n          \r\n        axios.get(\"https://covid-193.p.rapidapi.com/countries\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"d57969ed8amsh05ce00a7d1d6949p1fc6d8jsn2cff508d63aa\"\r\n            }\r\n        }).then((response) => {\r\n            // console.log(response)\r\n            if(response.status === 200){\r\n                this.setState({countrySlug: response.data.response, isLoadingCountry: false})\r\n            }\r\n        })\r\n        // https://bing.com/covid/data\r\n        axios.get(\"https://covid-193.p.rapidapi.com/statistics\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"d57969ed8amsh05ce00a7d1d6949p1fc6d8jsn2cff508d63aa\"\r\n            }\r\n        }).then((response) => {\r\n            // console.log(response);\r\n            if(response.status === 200){\r\n                this.setState({summaryData: response.data.response})\r\n                this.setDataForTable();\r\n            }\r\n        })\r\n\r\n        this.refreshData()\r\n        \r\n        \r\n        \r\n    }\r\n\r\n    refreshData(){\r\n        var self = this;\r\n        setInterval(() => {\r\n            // self.setState({isLoading: true})\r\n            axios.get(\"https://covid-193.p.rapidapi.com/statistics\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"d57969ed8amsh05ce00a7d1d6949p1fc6d8jsn2cff508d63aa\"\r\n            }\r\n            }).then((response) => {\r\n                console.log(response);\r\n                if(response.status === 200){\r\n                    this.setState({summaryData: response.data.response})\r\n                    this.setDataForTable();\r\n                }\r\n            })\r\n        }, 10 * 60 * 1000);\r\n    }\r\n\r\n    // compare(a, b) {\r\n    //     // Use toUpperCase() to ignore character casing\r\n    //     const bandA = a.TotalConfirmed;\r\n    //     const bandB = b.TotalConfirmed;\r\n      \r\n    //     let comparison = 0;\r\n    //     if (bandA < bandB) {\r\n    //       comparison = 1;\r\n    //     } else if (bandA > bandB) {\r\n    //       comparison = -1;\r\n    //     }\r\n    //     return comparison;\r\n    // }\r\n\r\n    setDataForTable(){\r\n        var tempArray = [];\r\n        this.state.summaryData.map((eachCountry) => {\r\n            // var largest = eachCountry;\r\n            tempArray.push(this.createData(eachCountry))\r\n        })\r\n        // tempArray.sort(this.compare);\r\n        this.setState({tableRow: tempArray})\r\n        this.setState({tableOrigRow: tempArray})\r\n        this.setState({isLoading: false})\r\n    }\r\n\r\n    createData(eachData) {\r\n        // var tempObj = {};\r\n        // console.log(eachData.cases.active)\r\n        // for (const key in eachData) {\r\n        //     if (eachData.hasOwnProperty(key)) {\r\n        //         const element = eachData[key];\r\n        //         tempObj[key] = element\r\n        //     }\r\n        // }\r\n        // var Country = eachData.country, NewConfirmed = eachData.NewConfirmed, TotalCases =  eachData.cases.total, NewDeaths = eachData.NewDeaths, TotalDeaths = eachData.TotalDeaths, NewRecovered = eachData.NewRecovered, TotalRecovered = eachData.TotalRecovered, slug = eachData.Slug;\r\n        if(eachData.country === \"All\"){\r\n            this.setState({worldSummary: eachData})\r\n        }\r\n        var country = eachData.country;\r\n        var totalCases = eachData.cases.total;\r\n        var newCases = eachData.cases.new;\r\n        var activeCases = eachData.cases.active;\r\n        var criticalCases = eachData.cases.critical;\r\n        var recovered = eachData.cases.recovered;\r\n        var newDeaths = eachData.deaths.new === null ? '' : eachData.deaths.new;\r\n        var totalDeaths = eachData.deaths.total;\r\n\r\n        return {\r\n            country,\r\n            totalCases,\r\n            newCases,\r\n            activeCases,\r\n            criticalCases,\r\n            recovered,\r\n            newDeaths,\r\n            totalDeaths,\r\n        };\r\n    }\r\n\r\n    getCurrentSelectedRow(row, setSelected){\r\n        \r\n        this.setState({tableSelection: setSelected, currentRow: row})\r\n        localStorage.setItem('currentRow', JSON.stringify(row))\r\n        var elmnt = document.getElementById(\"DataSource\");\r\n        elmnt.scrollIntoView();\r\n        // console.log(row, 'asd')\r\n        // var Today = this.formatDateT(this.Today);\r\n        // var Yesterday = this.formatDateT(this.Yesterday);\r\n\r\n        // var currentSelected = [];\r\n        // this.state.countrySlug.map(slug => {\r\n        //     console.log(slug.Country, row.country, slug.Country.indexOf(row.country))\r\n        //     if(slug.Country.indexOf(row.country) > -1){\r\n        //         currentSelected.push(slug)\r\n        //     }\r\n        // })\r\n        // console.log(currentSelected, 'asd')\r\n\r\n        // axios.get(\"https://api.covid19api.com/country/\"+row.Slug+\"/status/confirmed?from=\"+Yesterday+\"&to=\"+Today, requestOptions).then((response) => {\r\n        //     console.log(response);\r\n        //     if(response.status === 200){\r\n        //         // self.setState({summaryData: response.data})\r\n        //         // self.setDataForTable();\r\n        //         this.setState({countryData: response.data})\r\n        //         this.buildEachCountryTable()\r\n        //     }\r\n        // })\r\n    }\r\n\r\n    buildEachCountryTable(){\r\n        var tempArray = [];\r\n        this.state.countryData.map((eachData) => {\r\n            // var largest = eachCountry;\r\n            tempArray.push(this.createData(eachData))\r\n        })\r\n        this.setState({countryTableRow: tempArray})\r\n    }\r\n    \r\n    onCloseDialog(){\r\n        this.setState({countryTableRow: [], currentRow: {}})\r\n    }\r\n\r\n    onChangeSearch(value){\r\n        // console.log(value)\r\n        if(value !== null){\r\n            this.setState({searchValue: value.label})\r\n        }\r\n        else if(value === null ){\r\n            this.setState({searchValue: \"\"})\r\n\r\n        }\r\n        else{\r\n            this.setState({searchValue: value})\r\n\r\n        }\r\n    }\r\n\r\n    // static getDerivedStateFromProps(props, state){\r\n    //     if(state.searchValue !== this.state.searchValue){\r\n    //         return{\r\n    //             tableRow: this.filterTable()\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    componentDidUpdate(prevState, prevProps){\r\n        console.log(prevState, prevProps, this.state)\r\n        if(prevProps.searchValue !== this.state.searchValue){\r\n            this.setState({tableRow: this.filterTable()})\r\n        }\r\n    }\r\n\r\n    filterTable(){\r\n        var tempArray = [];\r\n        var tempArrayData = [...this.state.tableRow];\r\n        \r\n        if(this.state.searchValue !== \"\"){\r\n            this.state.tableRow.map((eachRow) => {\r\n                if(eachRow.country.toLowerCase().indexOf(this.state.searchValue.toLowerCase()) > -1){\r\n                    tempArray.push(eachRow)\r\n                }\r\n            })\r\n            // console.log(tempArrayData, this.state.tableRow)\r\n            return tempArray\r\n        } \r\n        else{\r\n            // console.log(tempArrayData, this.state.tableRow)\r\n            return this.state.tableOrigRow\r\n\r\n        }\r\n        // this.setState({tableRow: tempArray})\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state, this.props)\r\n        // let location = useLocation();\r\n        // console.log(this.state.countrySlug, window.location.pathname.split('/'), this.state.countrySlug.includes(window.location.pathname.split('/')[1]));\r\n        var currentRow = (localStorage.getItem('currentRow')) !== null ?  JSON.parse(localStorage.getItem('currentRow')) : this.state.currentRow;\r\n        var currentPath =  currentRow.country === window.location.pathname.split('/')[1]? window.location.pathname : '/404';\r\n        // console.log(currentPath);\r\n\r\n        // return <span>Path : {location.pathname}</span>\r\n        return (\r\n            <LoadingOverlay\r\n            active={this.state.isLoading}\r\n            spinner\r\n            text='Loading your content...'\r\n            >\r\n\r\n                {/* {Object.keys(this.state.currentRow).length > 0 ? <CountryDetails onCloseDialog = {this.onCloseDialog.bind(this)} currentRow = {this.state.currentRow} tableSelection = {this.state.tableSelection}/> : null} */}\r\n                {!this.state.isLoading ? \r\n                <div id = \"DataSource\" >\r\n                {window.location.pathname === '/' ||  window.location.pathname === '/All'? \r\n                <div><Route exact path={'/'} render={() => { \r\n                    return (<div className = \"Container\">\r\n                        <WorldDetails details = {this.state.worldSummary}/>\r\n                        <div className = \"comboSelect\"><CountrySelect  countrySlug = {this.state.countrySlug}  onChangeSearch = {this.onChangeSearch.bind(this)}/></div>\r\n                        <span className=\"summaryDate\">\r\n                        <p>World Detials</p>\r\n                        </span>\r\n                    <Table rows = {this.state.tableRow} columns = {columns} getCurrentSelectedRow = {this.getCurrentSelectedRow.bind(this)} defaultSort = {\"totalCases\"} pagination = {10}/></div>)\r\n                }}/>\r\n                <Route exact path={'/All'} render={() => { \r\n                    return (<div className = \"Container\">\r\n                        <WorldDetails details = {this.state.worldSummary}/>\r\n                        <div className = \"comboSelect\"><CountrySelect  countrySlug = {this.state.countrySlug}  onChangeSearch = {this.onChangeSearch.bind(this)}/></div>\r\n                        <span className=\"summaryDate\">\r\n                        <p>World Detials</p>\r\n                        </span>\r\n                    <Table rows = {this.state.tableRow} columns = {columns} getCurrentSelectedRow = {this.getCurrentSelectedRow.bind(this)} defaultSort = {\"totalCases\"} pagination = {10}/></div>)\r\n                }}/></div>\r\n                :\r\n                <Route exact path={currentPath} render={() => {\r\n                    return (<div className = \"Container\">  \r\n                    <CountryNormal currentRow = {(localStorage.getItem('currentRow')) !== null ?  JSON.parse(localStorage.getItem('currentRow')) : this.state.currentRow }/>\r\n                    \r\n                    \r\n                    <div className = \"comboSelect\"><CountrySelect  countrySlug = {this.state.countrySlug}  onChangeSearch = {this.onChangeSearch.bind(this)}/></div>\r\n                    <span className=\"summaryDate\">\r\n                            <p>World Detials</p>\r\n                    </span>\r\n                    <Table rows = {this.state.tableRow} columns = {columns} getCurrentSelectedRow = {this.getCurrentSelectedRow.bind(this)} defaultSort = {\"totalCases\"} pagination = {10}/>\r\n                </div>)}} /> }\r\n                \r\n               \r\n                </div>\r\n                :\r\n                 null}\r\n                 <Route path = {'/newsfeeds'} key=\"newsFeed\" component={RssSection}/>\r\n\r\n<Route path = {'/404'} key=\"404PAGE\" component={HandleUrl}/>\r\n            </LoadingOverlay>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataSection;","import React from 'react';\r\nimport { Link, withRouter, NavLink } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n    \r\n    return (\r\n        <div className = \"Header\">\r\n            <span className = \"headerImage\"><Link to=\"/\"><img src = \"./TheCovidAnalysis_V1_Header.png\"/></Link></span>\r\n            {/* <span className = \"headerTitle\">The Covid Analysis</span> */}\r\n            <div className = \"menu\">\r\n                <ul>\r\n                    <li>\r\n                    <Link className = {window.location.pathname === '/' ? \"active\" : \"notAcive\"} to=\"/\">Live Updates </Link>\r\n                    </li>\r\n                    <li>\r\n                    <Link className = {window.location.pathname === '/newsfeeds' ? \"active\" : \"notAcive\"} to=\"/newsfeeds\">News Feed </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Header);","import React from 'react';\r\n\r\nfunction header(props) {\r\n    return (\r\n        <div className = \"Footer\">\r\n            <span className = \"FooterText\">Website by - Loop Infinitly</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default header;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport DataSection from './datasection';\nimport Header from './header'\nimport Footer from './footer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className = \"mainData\">\n\n        <Router>\n          <Header/>\n          <Switch>\n            <DataSection/>\n          </Switch>\n        </Router>\n        <Footer/>\n\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}